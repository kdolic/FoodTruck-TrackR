[{"C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\index.js":"1","C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\App.js":"2","C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\components\\Login.js":"4","C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\components\\Home.js":"5","C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\components\\RegisterForm.js":"6"},{"size":633,"mtime":1609794392961,"results":"7","hashOfConfig":"8"},{"size":359,"mtime":1609887066943,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":4741,"mtime":1609886565342,"results":"11","hashOfConfig":"8"},{"size":3285,"mtime":1609883608042,"results":"12","hashOfConfig":"8"},{"size":7279,"mtime":1609886546293,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ilq11n",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\index.js",[],["30","31"],"C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\App.js",[],"C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\components\\Login.js",["32","33"],"import React from 'react';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Grid,\r\n  Box,\r\n  FormHelperText,\r\n  Button,\r\n  TextField,\r\n} from '@material-ui/core/';\r\nimport { red } from '@material-ui/core/colors';\r\nimport foodtruck from '../images/foodtruck.png';\r\nimport Axios from 'axios';\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    margin: '80px auto',\r\n    border: '1px solid #d2d2d2',\r\n    boxShadow: '0px 1px 10px -2px #807f7f',\r\n    borderRadius: '15px',\r\n    backgroundColor: '#FFF9F0',\r\n    width: '70%',\r\n    height: '62vh',\r\n    '@media (max-width: 550px)': {\r\n        width: '90%',\r\n        height: 'auto',\r\n        marginBottom: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        },\r\n    },\r\n  header: {\r\n    textAlign: 'center',\r\n    marginTop: '5%',\r\n    marginBottom: '5%',\r\n    '@media (max-width: 550px)': {\r\n      marginBottom: '10%',\r\n    },\r\n  },\r\n  responsive: {\r\n    '@media (max-width: 550px)': {\r\n      width: '100%',\r\n      height: 'auto',\r\n    },\r\n  },\r\n  label: {\r\n    marginLeft: '3%',\r\n    '@media (max-width: 550px)': {\r\n      fontSize: '0.75rem',\r\n    },\r\n  },\r\n  fields: {\r\n    width: '94%',\r\n    marginLeft: '3%',\r\n    '@media (max-width: 550px)': {\r\n      fontSize: '0.75rem',\r\n    },\r\n  },\r\n  error: {\r\n    fontSize: '0.75rem',\r\n    color: red[600],\r\n    width: '100%',\r\n    marginTop: '0.25rem',\r\n    marginLeft: '1%',\r\n    '&::before': {\r\n      content: '\":x: \"',\r\n      fontSize: '0.65rem',\r\n    },\r\n  },\r\n  button: {\r\n    width: '30%',\r\n    marginLeft: '35%',\r\n    padding: '1% 0',\r\n    backgroundImage: 'linear-gradient(#FFAD33, #BF8124)',\r\n    color: 'white',\r\n  },\r\n  footer: {\r\n    marginBottom: '5%',\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const FormTextInput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n      <>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <TextField\r\n          id='standard-basic'\r\n          className={classes.fields}\r\n          width={1}\r\n          {...field}\r\n          {...props}\r\n        />\r\n        {meta.touched && meta.error ? (\r\n          <FormHelperText className={classes.error}>\r\n            {meta.error}\r\n          </FormHelperText>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n    return (\r\n      <>\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={Yup.object({\r\n          username: Yup.string()\r\n            .min(4, 'Must be 4 to 8 characters')\r\n            .max(8, 'Must be 4 to 8 characters')\r\n            .required('Required'),\r\n          password: Yup.string()\r\n            .required('No password provided')\r\n            .min(6, 'Must be 6 to 12 characters')\r\n            .max(12, 'Must be 6 to 12 characters')\r\n            .matches(\r\n              /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,12}$/,\r\n              'Password needs at least one upper case letter, one lower case letter, and one numeric digit'\r\n            ),\r\n        })}\r\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n          await new Promise(r => setTimeout(r, 500));\r\n          alert(JSON.stringify(values, null, 2));\r\n          resetForm();\r\n          setSubmitting(false);\r\n        }}>\r\n\r\n        <Form className={classes.container}>\r\n          <Box className={classes.header}>\r\n            <img alt={'foodtruck'} src={foodtruck} className={classes.responsive} />\r\n            <h5>Login</h5>\r\n          </Box>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Box>\r\n                <label className={classes.label} htmlFor='username'>\r\n                  USERNAME\r\n                </label>\r\n              </Box>\r\n              <FormTextInput\r\n                id='username'\r\n                name='username'\r\n                type='text'\r\n                width={1}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box>\r\n                <label className={classes.label} htmlFor='password'>\r\n                  PASSWORD\r\n                </label>\r\n              </Box>\r\n              <FormTextInput id='password' name='password' type='password' />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.footer}>\r\n              <Button\r\n                variant='contained'\r\n                type='submit'\r\n                className={classes.button}>\r\n                Sign In!\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n    );\r\n}\r\n","C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\components\\Home.js",["34","35","36","37"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n  } from '@material-ui/core/';\r\nimport MainLogo from '../images/Main Logo.png';\r\n\r\nimport diner from '../images/diner.png';\r\nimport truck from '../images/truck.png';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Axios from 'axios';\r\nconst useStyles = makeStyles(theme => ({\r\ncontainer: {\r\n    margin: '60px auto',\r\n    border: '1px solid #d2d2d2',\r\n    boxShadow: '0px 1px 10px -2px #807f7f',\r\n    borderRadius: '20px',\r\n    backgroundColor: '#FFF9F0',\r\n    width: '100%',\r\n    '@media (max-width: 550px)': {\r\n        width: '90%',\r\n        height: 'auto', \r\n        marginBottom: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        },\r\n    },\r\n  header: {\r\n    textAlign: 'center',\r\n    marginTop: '2%',\r\n    marginBottom: '5%',\r\n    '@media (max-width: 550px)': {\r\n      marginBottom: '10%',\r\n    },\r\n  },\r\n  h2: {\r\n    fontSize: '1.2rem',\r\n    marginTop: '2%',\r\n  },\r\n  nav: {\r\n    backgroundColor: 'black',\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    padding: '1%',\r\n    marginBottom: '5%',\r\n    '@media (max-width: 550px)': {\r\n      marginBottom: '10%',\r\n    },\r\n  },\r\n  responsive: {\r\n    '@media (max-width: 550px)': {\r\n      width: '30%',\r\n      height: 'auto', \r\n    },\r\n  },\r\n  button: {\r\n    width: '50%',\r\n    padding: '5% 60%',\r\n    marginTop: '60%',\r\n    backgroundImage: 'linear-gradient(#FFAD33, #BF8124)',\r\n    color: '#fff9f0',\r\n    '@media (max-width: 550px)': {\r\n        width: '25%',\r\n        height: 'auto', \r\n      },\r\n  },\r\n  footer: {\r\n    marginTop: '5%',\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <div className={classes.container}>\r\n        <header className={classes.header}>\r\n            <Box className={classes.nav}>\r\n                <Link to='/' style={{ textDecoration: 'none', color: 'white', }}>FOODTRUCK TRACKR</Link>\r\n                <Link to='/' style={{ textDecoration: 'none', color: 'white' }}>Home</Link>\r\n            </Box>\r\n            <img src={MainLogo} alt={'foodtruck'} className={classes.responsive} />\r\n            <h2 className={classes.h2}>FoodTruck TrackR was designed to make finding and eating at a food truck fast, easy and fun.</h2>\r\n        </header>\r\n\r\n        <Box style={{display: 'flex', justifyContent: 'center'}}>\r\n            <Box style={{display: 'flex', flexDirection: 'column', margin: '5%', alignItems: 'center'}}>\r\n                <Box style={{marginBottom: '10%'}}><img src={diner} style={{height: '20vh'}} /></Box>\r\n                <Box><Button className={classes.button}>Diner</Button></Box>\r\n            </Box>\r\n            <Box style={{display: 'flex', flexDirection: 'column', margin: '5%', alignItems: 'center'}}>\r\n                <Box style={{marginBottom: '0%'}}><img src={truck} style={{height: '20vh'}} /></Box>\r\n                <Box><Button className={classes.button}>Operator</Button></Box>\r\n            </Box>\r\n        </Box>\r\n\r\n        <footer className={classes.footer}>© 2021 FOODTRUCK TRACKR. All rights  reserved.\r\n        </footer>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Kenan Dolic\\Documents\\LambdaProjects\\FoodTruck-TrackR\\frontEnd\\src\\components\\RegisterForm.js",["38","39"],"import React from 'react';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  FormHelperText,\r\n  Button,\r\n  Select,\r\n  Checkbox,\r\n  TextField,\r\n} from '@material-ui/core/';\r\nimport foodtruck from '../images/foodtruck.png';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Axios from 'axios';\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    margin: '80px auto',\r\n    border: '1px solid #d2d2d2',\r\n    boxShadow: '0px 1px 10px -2px #807f7f',\r\n    borderRadius: '15px',\r\n    backgroundColor: '#FFF9F0',\r\n    width: '70%',\r\n    height: '88vh',\r\n    '@media (max-width: 550px)': {\r\n        width: '90%',\r\n        height: 'auto', \r\n        marginBottom: '10%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        },\r\n    },\r\n  header: {\r\n    textAlign: 'center',\r\n    marginTop: '5%',\r\n    marginBottom: '5%',\r\n    '@media (max-width: 550px)': {\r\n      marginBottom: '10%',\r\n    },\r\n  },\r\n  responsive: {\r\n    '@media (max-width: 550px)': {\r\n      width: '100%',\r\n      height: 'auto',\r\n    },\r\n  },\r\n  label: {\r\n    marginLeft: '3%',\r\n    '@media (max-width: 550px)': {\r\n      fontSize: '0.75rem',\r\n    },\r\n  },\r\n  fields: {\r\n    width: '94%',\r\n    marginLeft: '3%',\r\n    '@media (max-width: 550px)': {\r\n      fontSize: '0.75rem',\r\n    },\r\n  },\r\n  error: {\r\n    fontSize: '0.75rem',\r\n    color: red[600],\r\n    width: '100%',\r\n    marginTop: '0.25rem',\r\n    marginLeft: '1%',\r\n    '&::before': {\r\n      content: '\":x: \"',\r\n      fontSize: '0.65rem',\r\n    },\r\n  },\r\n  button: {\r\n    width: '30%',\r\n    marginLeft: '35%',\r\n    padding: '1% 0',\r\n    backgroundImage: 'linear-gradient(#FFAD33, #BF8124)',\r\n    color: 'white',\r\n  },\r\n  footer: {\r\n    marginBottom: '5%',\r\n  },\r\n}));\r\n\r\nexport default function RegisterForm(){\r\n  const classes = useStyles();\r\n  const FormTextInput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n      <>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <TextField\r\n          id='standard-basic'\r\n          className={classes.fields}\r\n          width={1}\r\n          {...field}\r\n          {...props}\r\n        />\r\n        {meta.touched && meta.error ? (\r\n          <FormHelperText className={classes.error}>\r\n            {meta.error}\r\n          </FormHelperText>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n  const FormCheckbox = ({ children, ...props }) => {\r\n    const [field, meta] = useField({ ...props, type: 'checkbox' });\r\n    return (\r\n      <>\r\n        <label className='checkbox'>\r\n          <Checkbox {...field} {...props} type='checkbox' />\r\n          {children}\r\n        </label>\r\n        {meta.touched && meta.error ? (\r\n          <FormHelperText className={classes.error}>\r\n            {meta.error}\r\n          </FormHelperText>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n  const FormSelect = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n      <>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <Select\r\n          native\r\n          value='accounttype'\r\n          {...field}\r\n          {...props}\r\n          className={classes.fields}\r\n        />\r\n        {meta.touched && meta.error ? (\r\n          <FormHelperText className={classes.error}>\r\n            {meta.error}\r\n          </FormHelperText>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          accountType: '',\r\n          username: '',\r\n          password: '',\r\n          acceptedTerms: false,\r\n        }}\r\n        validationSchema={Yup.object({\r\n          accountType: Yup.string()\r\n            .oneOf(['operator', 'diner'], 'Invalid account type')\r\n            .required('Required'),\r\n          username: Yup.string()\r\n            .min(4, 'Must be 4 to 8 characters')\r\n            .max(8, 'Must be 4 to 8 characters')\r\n            .required('Required'),\r\n          password: Yup.string()\r\n            .required('No password provided')\r\n            .min(6, 'Must be 6 to 12 characters')\r\n            .max(12, 'Must be 6 to 12 characters')\r\n            .matches(\r\n              /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,12}$/,\r\n              'Password needs at least one upper case letter, one lower case letter, and one numeric digit'\r\n            ),\r\n          email: Yup.string()\r\n            .email('Invalid email address')\r\n            .required('Required'),\r\n          acceptedTerms: Yup.boolean()\r\n            .required('Required')\r\n            .oneOf([true], 'You must accept the terms and conditions'),\r\n        })}\r\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n          await new Promise(r => setTimeout(r, 500));\r\n          alert(JSON.stringify(values, null, 2));\r\n          resetForm();\r\n          setSubmitting(false);\r\n        }}>\r\n        <Form className={classes.container}>\r\n          <Box className={classes.header}>\r\n            <img alt={'foodtruck'} src={foodtruck} className={classes.responsive} />\r\n            <h5>Register</h5>\r\n          </Box>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Box>\r\n                <label className={classes.label} htmlFor='accountType'>\r\n                  ACCOUNT TYPE\r\n                </label>\r\n              </Box>\r\n              <FormSelect id='accountType' name='accountType'>\r\n                <option aria-label='None' value='' />\r\n                <option value='operator'>Operator</option>\r\n                <option value='diner'>Diner</option>\r\n              </FormSelect>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box>\r\n                <label className={classes.label} htmlFor='username'>\r\n                  USERNAME\r\n                </label>\r\n              </Box>\r\n              <FormTextInput\r\n                id='username'\r\n                name='username'\r\n                type='text'\r\n                width={1}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box>\r\n                <label className={classes.label} htmlFor='email'>\r\n                  E-MAIL\r\n                </label>\r\n              </Box>\r\n              <FormTextInput id='email' name='email' type='email' />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box>\r\n                <label className={classes.label} htmlFor='password'>\r\n                  PASSWORD\r\n                </label>\r\n              </Box>\r\n              <FormTextInput id='password' name='password' type='password' />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormCheckbox name='acceptedTerms' >\r\n                I agree to all statements in the{' '}\r\n                <Link to=''>terms of service</Link>\r\n              </FormCheckbox>\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.footer}>\r\n              <Button\r\n                variant='contained'\r\n                type='submit'\r\n                className={classes.button}>\r\n                Sign Up!\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":4,"column":10,"nodeType":"46","messageId":"47","endLine":4,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":16,"column":8,"nodeType":"46","messageId":"47","endLine":16,"endColumn":13},{"ruleId":"44","severity":1,"message":"49","line":12,"column":10,"nodeType":"46","messageId":"47","endLine":12,"endColumn":13},{"ruleId":"44","severity":1,"message":"48","line":13,"column":8,"nodeType":"46","messageId":"47","endLine":13,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":91,"column":52,"nodeType":"52","endLine":91,"endColumn":96},{"ruleId":"50","severity":1,"message":"51","line":95,"column":51,"nodeType":"52","endLine":95,"endColumn":95},{"ruleId":"44","severity":1,"message":"53","line":8,"column":3,"nodeType":"46","messageId":"47","endLine":8,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":19,"column":8,"nodeType":"46","messageId":"47","endLine":19,"endColumn":13},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'red' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]